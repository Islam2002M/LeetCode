/*class Solution {
public:
    int maxArea(vector<int>& height) {
        int maxSize=min(height[1],height[0]);int currSize;
       for(int i=0;i<height.size()-1;i++) 
          for(int j=i+1;j<height.size();j++)
             {
              currSize=(min(height[i],height[j]))*(j-i);
              if(currSize>maxSize)
                 maxSize=currSize; 
             }
    return maxSize;
    }
};*/
class Solution {
public:
    int maxArea(vector<int>& height) {
        int maxSize = 0;
        int left = 0, right = height.size() - 1;

        while (left < right) {
            int currSize = min(height[left], height[right]) * (right - left);
            maxSize = max(maxSize, currSize);

            if (height[left] < height[right])
                left++;
            else
                right--;
        }

        return maxSize;
    }
};
